import logging
import re
from typing import Optional

from aiogram import Router, F
from aiogram.types import Message
from aiogram.filters import Command

from services.recs import generate_recommendation, detect_focus, AVAILABLE_FOCUSES

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
logger = logging.getLogger(__name__)

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–æ—É—Ç–µ—Ä–∞
recs_router = Router(name="recommendations")

# –ü–∞—Ç—Ç–µ—Ä–Ω –¥–ª—è –∏–∑–≤–ª–µ—á–µ–Ω–∏—è —Ñ–æ–∫—É—Å–∞ –∏–∑ –∫–æ–º–∞–Ω–¥—ã
FOCUS_PATTERN = r"/reflect(?:_([a-zA-Z-]+))?"

@recs_router.message(Command("reflect"))
async def reflect_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /reflect —Å –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–º —Ñ–æ–∫—É—Å–æ–º (/reflect –∏–ª–∏ /reflect_anxiety)."""
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ñ–æ–∫—É—Å –∏–∑ –∫–æ–º–∞–Ω–¥—ã
    match = re.match(FOCUS_PATTERN, message.text)
    focus = match.group(1) if match and match.group(1) else "default"
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—Å—Ç –∑–∞–ø—Ä–æ—Å–∞ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã
    command_parts = message.text.split(maxsplit=1)
    text = command_parts[1] if len(command_parts) > 1 else "–î–∞–π –º–Ω–µ —Å–æ–≤–µ—Ç"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    recommendation = await generate_recommendation(
        text=text,
        user_id=message.from_user.id,
        focus=focus
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await message.answer(recommendation)
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id} –ø–æ –∫–æ–º–∞–Ω–¥–µ /reflect")

@recs_router.message(F.text)
async def process_text_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —ç—Ç–æ –∫–æ–º–∞–Ω–¥–æ–π
    if message.text.startswith('/'):
        return
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ–∫—É—Å –∏–∑ —Ç–µ–∫—Å—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    detected_focus = detect_focus(message.text) or "default"
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—é
    recommendation = await generate_recommendation(
        text=message.text,
        user_id=message.from_user.id,
        focus=detected_focus
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
    await message.answer(recommendation)
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id} –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è")

@recs_router.message(Command("help_reflect"))
async def help_reflect(message: Message):
    """–°–ø—Ä–∞–≤–∫–∞ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –∫–æ–º–∞–Ω–¥—ã /reflect –∏ –¥–æ—Å—Ç—É–ø–Ω—ã–º —Ñ–æ–∫—É—Å–∞–º."""
    help_text = [
        "üß† –ö–æ–º–∞–Ω–¥–∞ /reflect –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç.",
        "",
        "–í–∞—Ä–∏–∞–Ω—Ç—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:",
        "- /reflect - —Å–æ–≤–µ—Ç –ø–æ –æ–±—â–µ–π —Ç–µ–º–µ",
        "- /reflect_focus - —Å–æ–≤–µ—Ç –ø–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Ñ–æ–∫—É—Å—É (–Ω–∞–ø—Ä–∏–º–µ—Ä, /reflect_anxiety)",
        "- /reflect –í–∞—à –∑–∞–ø—Ä–æ—Å - —Å–æ–≤–µ—Ç –Ω–∞ –æ—Å–Ω–æ–≤–µ –í–∞—à–µ–≥–æ –∑–∞–ø—Ä–æ—Å–∞",
        "",
        "üìö –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ–æ–∫—É—Å—ã:"
    ]
    
    for focus, description in AVAILABLE_FOCUSES.items():
        if focus != "default":
            help_text.append(f"- {focus}: {description}")
    
    await message.answer("\n".join(help_text))
    logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–µ /reflect –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {message.from_user.id}")

@recs_router.message(F.voice)
async def process_voice_message(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (–∑–∞–≥–ª—É—à–∫–∞)."""
    # –ó–∞–≥–ª—É—à–∫–∞ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
    # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –≥–æ–ª–æ—Å–∞ —á–µ—Ä–µ–∑ STT-—Å–µ—Ä–≤–∏—Å
    await message.answer(
        "–Ø –ø–æ–∫–∞ –Ω–µ —É–º–µ—é —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å –≥–æ–ª–æ—Å–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è. "
        "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∑–∞–ø—Ä–æ—Å —Ç–µ–∫—Å—Ç–æ–º –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /reflect."
    )
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {message.from_user.id} –æ—Ç–ø—Ä–∞–≤–∏–ª –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ)") 