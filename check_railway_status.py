#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Railway
"""

import os
import sys
import json
import requests
import argparse
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def get_bot_info(bot_token):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ"""
    try:
        print(f"üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ...")
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getMe", timeout=10)
        
        if response.status_code == 200 and response.json().get("ok"):
            bot_info = response.json().get("result", {})
            print(f"‚úÖ –ë–æ—Ç –Ω–∞–π–¥–µ–Ω: {bot_info.get('first_name')} (@{bot_info.get('username')})")
            return bot_info
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {e}")
        return None

def get_webhook_info(bot_token):
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö webhook"""
    try:
        print(f"üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook...")
        response = requests.get(f"https://api.telegram.org/bot{bot_token}/getWebhookInfo", timeout=10)
        
        if response.status_code == 200 and response.json().get("ok"):
            webhook_info = response.json().get("result", {})
            webhook_url = webhook_info.get("url", "")
            last_error = webhook_info.get("last_error_message", "–Ω–µ—Ç")
            pending_updates = webhook_info.get("pending_update_count", 0)
            
            print(f"‚ÑπÔ∏è –¢–µ–∫—É—â–∏–π webhook URL: {webhook_url}")
            print(f"‚ÑπÔ∏è –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—à–∏–±–∫–∞: {last_error}")
            print(f"‚ÑπÔ∏è –û–∂–∏–¥–∞—é—â–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {pending_updates}")
            
            return webhook_info
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: {response.text}")
            return None
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ webhook: {e}")
        return None

def check_railway_app(webhook_url=None):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Railway"""
    if not webhook_url:
        webhook_url = os.environ.get("WEBHOOK_URL")
    
    if not webhook_url:
        print("‚ùå URL webhook –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –±–∞–∑–æ–≤—ã–π URL (–±–µ–∑ /webhook/...)
    if "/webhook/" in webhook_url:
        railway_url = webhook_url.split("/webhook/")[0]
    else:
        railway_url = webhook_url
    
    try:
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Railway: {railway_url}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º endpoint /health
        health_url = f"{railway_url}/health"
        health_response = requests.get(health_url, timeout=10)
        
        if health_response.status_code == 200:
            print(f"‚úÖ Health endpoint –¥–æ—Å—Ç—É–ø–µ–Ω: {health_response.text}")
        else:
            print(f"‚ùå Health endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {health_response.status_code} - {health_response.text}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π endpoint
        root_response = requests.get(railway_url, timeout=10)
        
        if root_response.status_code == 200:
            print(f"‚úÖ –ö–æ—Ä–Ω–µ–≤–æ–π endpoint –¥–æ—Å—Ç—É–ø–µ–Ω")
        else:
            print(f"‚ùå –ö–æ—Ä–Ω–µ–≤–æ–π endpoint –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {root_response.status_code}")
        
        # –í–æ–∑–≤—Ä–∞—â–∞–µ–º True, –µ—Å–ª–∏ —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω –∏–∑ —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤ –¥–æ—Å—Ç—É–ø–µ–Ω
        return health_response.status_code == 200 or root_response.status_code == 200
    
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Railway: {e}")
        return False

def check_webhook_connection(webhook_url, bot_token):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å webhook –æ—Ç–ø—Ä–∞–≤–∫–æ–π —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞"""
    if not webhook_url:
        print("‚ùå URL webhook –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    try:
        print(f"üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å webhook: {webhook_url}")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å
        test_data = {
            "update_id": 12345,
            "message": {
                "message_id": 1,
                "from": {
                    "id": 123456789,
                    "is_bot": False,
                    "first_name": "Test",
                    "username": "test_user"
                },
                "chat": {
                    "id": 123456789,
                    "first_name": "Test",
                    "username": "test_user",
                    "type": "private"
                },
                "date": 1616142831,
                "text": "/start"
            }
        }
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å
        response = requests.post(webhook_url, json=test_data, timeout=10)
        
        print(f"‚ÑπÔ∏è –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞: {response.status_code}")
        print(f"‚ÑπÔ∏è –¢–µ–∫—Å—Ç –æ—Ç–≤–µ—Ç–∞: {response.text}")
        
        if response.status_code == 200:
            print("‚úÖ Webhook –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return True
        else:
            print(f"‚ùå Webhook –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã: {response.status_code} - {response.text}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ 404 (Not Found)
            if response.status_code == 404:
                print("‚ö†Ô∏è –û—à–∏–±–∫–∞ 404 —É–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É —Å –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–µ–π –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
                print("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å, –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ webhook –≤ webhook_server.py")
            
            return False
    except Exception as e:
        print(f"‚ùå –ò—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å webhook: {e}")
        return False

def generate_report(bot_token, webhook_url=None):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç –æ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –±–æ—Ç–∞ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –±–æ—Ç–∞ –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Railway")
    print("=" * 80)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
    bot_info = get_bot_info(bot_token)
    if not bot_info:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ BOT_TOKEN.")
        return False
    
    print("=" * 80)
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook
    webhook_info = get_webhook_info(bot_token)
    if not webhook_info:
        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ webhook.")
        return False
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º URL –∏–∑ webhook_info, –µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω —è–≤–Ω–æ
    if not webhook_url and webhook_info:
        webhook_url = webhook_info.get("url", "")
    
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Railway
    railway_status = check_railway_app(webhook_url)
    if not railway_status:
        print("‚ùå –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Railway –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ.")
        print("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞ Railway –∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ")
        return False
    
    print("=" * 80)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å webhook
    webhook_connection = check_webhook_connection(webhook_url, bot_token)
    if not webhook_connection:
        print("‚ùå –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å webhook –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        print("‚ö†Ô∏è –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook –≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
        return False
    
    print("=" * 80)
    print("‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!")
    print("üéâ –ë–æ—Ç –∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ Railway –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    return True

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Railway")
    parser.add_argument("--token", help="–¢–æ–∫–µ–Ω –±–æ—Ç–∞ Telegram")
    parser.add_argument("--webhook", help="URL webhook –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏")
    parser.add_argument("--report", action="store_true", help="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç")
    args = parser.parse_args()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞ –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –∏–∑ .env
    bot_token = args.token or os.environ.get("BOT_TOKEN")
    if not bot_token:
        print("‚ùå –ù–µ —É–∫–∞–∑–∞–Ω —Ç–æ–∫–µ–Ω –±–æ—Ç–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ --token –∏–ª–∏ –¥–æ–±–∞–≤—å—Ç–µ BOT_TOKEN –≤ .env")
        sys.exit(1)
    
    # –ü–æ–ª—É—á–∞–µ–º URL webhook –∏–∑ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∏–ª–∏ –∏–∑ .env
    webhook_url = args.webhook or os.environ.get("WEBHOOK_URL")
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—ã–π –æ—Ç—á–µ—Ç, –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ñ–ª–∞–≥ --report
    if args.report:
        success = generate_report(bot_token, webhook_url)
        sys.exit(0 if success else 1)
    
    # –ò–Ω–∞—á–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    railway_status = check_railway_app(webhook_url)
    sys.exit(0 if railway_status else 1) 